<UserControl
    x:Class="YoutubeDownloader.Views.Components.DashboardView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:components="clr-namespace:YoutubeDownloader.ViewModels.Components"
    xmlns:converters="clr-namespace:YoutubeDownloader.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    d:DataContext="{d:DesignInstance Type=components:DashboardViewModel}"
    FocusManager.FocusedElement="{Binding ElementName=QueryTextBox}"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Toolbar  -->
        <Grid Grid.Row="0" Background="{DynamicResource MaterialDesignDarkBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <!--  Query and process query button  -->
            <materialDesign:Card Grid.Column="0" Margin="12,12,0,12">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!--  Search icon  -->
                    <materialDesign:PackIcon
                        Grid.Column="0"
                        Width="24"
                        Height="24"
                        Margin="8"
                        VerticalAlignment="Center"
                        Foreground="{DynamicResource PrimaryHueMidBrush}"
                        Kind="Search" />

                    <!--  Query  -->
                    <TextBox
                        x:Name="QueryTextBox"
                        Grid.Column="1"
                        Margin="0,6,6,8"
                        VerticalAlignment="Bottom"
                        materialDesign:HintAssist.Hint="URL or search query"
                        materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                        AcceptsReturn="True"
                        BorderThickness="0"
                        FontSize="16"
                        MaxLines="4"
                        PreviewKeyDown="QueryTextBox_OnPreviewKeyDown"
                        Text="{Binding Query, UpdateSourceTrigger=PropertyChanged}"
                        VerticalScrollBarVisibility="Auto" />

                    <!--  Process query button  -->
                    <Button
                        Grid.Column="2"
                        Margin="0,6,6,6"
                        Padding="4"
                        Command="{s:Action ProcessQuery}"
                        IsDefault="True"
                        Style="{DynamicResource MaterialDesignFlatButton}"
                        ToolTip="Process query (Enter)">
                        <materialDesign:PackIcon
                            Width="24"
                            Height="24"
                            Kind="ArrowRight" />
                    </Button>
                </Grid>
            </materialDesign:Card>

            <!--  Settings button  -->
            <Button
                Grid.Column="1"
                Margin="6"
                Padding="4"
                Command="{s:Action ShowSettings}"
                Foreground="{DynamicResource MaterialDesignDarkForeground}"
                Style="{DynamicResource MaterialDesignFlatButton}"
                ToolTip="Settings">
                <Button.Resources>
                    <SolidColorBrush x:Key="MaterialDesignFlatButtonClick" Color="#4C4C4C" />
                </Button.Resources>
                <materialDesign:PackIcon
                    Width="24"
                    Height="24"
                    Kind="Settings" />
            </Button>
        </Grid>

        <!--  Progress  -->
        <ProgressBar
            Grid.Row="1"
            Background="{DynamicResource MaterialDesignDarkBackground}"
            IsIndeterminate="{Binding IsProgressIndeterminate}"
            Value="{Binding Progress.Current.Fraction, Mode=OneWay}" />

        <!--  Content  -->
        <Grid Grid.Row="2" Background="{DynamicResource MaterialDesignCardBackground}">
            <!--  Placeholder  -->
            <StackPanel
                Margin="8,32,8,8"
                HorizontalAlignment="Center"
                Visibility="{Binding IsDownloadsAvailable, Converter={x:Static converters:BoolToVisibilityConverter.CollapsedOrVisible}}">
                <materialDesign:PackIcon
                    Width="258"
                    Height="258"
                    HorizontalAlignment="Center"
                    Foreground="{DynamicResource MaterialDesignDivider}"
                    Kind="Youtube" />

                <TextBlock
                    HorizontalAlignment="Center"
                    FontSize="18"
                    FontWeight="Light"
                    TextAlignment="Center"
                    TextWrapping="Wrap">
                    <Run Text="Copy-paste a" />
                    <Run FontWeight="SemiBold" Text="URL" />
                    <Run Text="or enter a" />
                    <Run FontWeight="SemiBold" Text="search query" />
                    <Run Text="to start downloading" />
                    <LineBreak />
                    <Run Text="Press" />
                    <Run FontWeight="SemiBold" Text="Shift+Enter" />
                    <Run Text="to add multiple items" />
                </TextBlock>
            </StackPanel>

            <!--  Downloads  -->
            <DataGrid
                Background="{DynamicResource MaterialDesignCardBackground}"
                ColumnWidth="Auto"
                HorizontalScrollBarVisibility="Disabled"
                ItemsSource="{Binding Downloads}"
                ScrollViewer.CanContentScroll="False"
                VerticalScrollBarVisibility="Auto"
                Visibility="{Binding IsDownloadsAvailable, Converter={x:Static converters:BoolToVisibilityConverter.VisibleOrHidden}}">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{s:Action RemoveSuccessfulDownloads}" Header="Remove successful downloads" />
                        <MenuItem Command="{s:Action RemoveInactiveDownloads}" Header="Remove inactive downloads" />
                        <Separator />
                        <MenuItem Command="{s:Action RestartFailedDownloads}" Header="Restart failed downloads" />
                        <Separator />
                        <MenuItem Command="{s:Action CancelAllDownloads}" Header="Cancel all downloads" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.RowStyle>
                    <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}">
                        <!--  Triggers  -->
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{x:Null}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{x:Null}" />
                                <Setter Property="BorderBrush" Value="{x:Null}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <!--  Columns  -->
                <DataGrid.Columns>
                    <!--  Thumbnail  -->
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type components:DownloadViewModel}">
                                <Image
                                    Width="48"
                                    Height="48"
                                    VerticalAlignment="Center"
                                    Source="{Binding Video, Converter={x:Static converters:VideoToLowestQualityThumbnailUrlConverter.Instance}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--  File name  -->
                    <DataGridTemplateColumn
                        Width="*"
                        Header="File"
                        SortMemberPath="FileName">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type components:DownloadViewModel}">
                                <TextBlock
                                    VerticalAlignment="Center"
                                    FontSize="14"
                                    Foreground="{DynamicResource MaterialDesignBody}"
                                    Text="{Binding FileName}"
                                    TextTrimming="CharacterEllipsis"
                                    ToolTip="{Binding FileName}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--  Status  -->
                    <DataGridTemplateColumn
                        MinWidth="100"
                        Header="Status"
                        SortMemberPath="ProgressOperation.Progress">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type components:DownloadViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <!--  Progress  -->
                                    <ProgressBar
                                        Grid.Column="0"
                                        Margin="0,0,6,0"
                                        Foreground="{DynamicResource SecondaryHueMidBrush}"
                                        IsIndeterminate="{Binding IsProgressIndeterminate}"
                                        Maximum="1"
                                        Minimum="0"
                                        Value="{Binding Progress.Current.Fraction, Mode=OneWay}">
                                        <ProgressBar.Style>
                                            <Style BasedOn="{StaticResource MaterialDesignCircularProgressBar}" TargetType="{x:Type ProgressBar}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Enqueued}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Canceled}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Completed}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Failed}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ProgressBar.Style>
                                    </ProgressBar>

                                    <!--  Status  -->
                                    <TextBlock
                                        Grid.Column="1"
                                        VerticalAlignment="Center"
                                        TextTrimming="CharacterEllipsis">
                                        <TextBlock.Style>
                                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <!--  Pending  -->
                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Enqueued}">
                                                        <Setter Property="Opacity" Value="0.7" />
                                                        <Setter Property="Text" Value="Pending..." />
                                                    </DataTrigger>

                                                    <!--  Downloading  -->
                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Started}">
                                                        <Setter Property="Text" Value="{Binding Progress.Current}" />
                                                    </DataTrigger>

                                                    <!--  Successful  -->
                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Completed}">
                                                        <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}" />
                                                        <Setter Property="Text" Value="✓ Done" />
                                                    </DataTrigger>

                                                    <!--  Canceled  -->
                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Canceled}">
                                                        <Setter Property="Foreground" Value="{DynamicResource CanceledBrush}" />
                                                        <Setter Property="Text" Value="✗ Canceled" />
                                                    </DataTrigger>

                                                    <!--  Failed  -->
                                                    <DataTrigger Binding="{Binding Status}" Value="{x:Static components:DownloadStatus.Failed}">
                                                        <Setter Property="Foreground" Value="{DynamicResource FailedBrush}" />
                                                        <Setter Property="Text" Value="⚠ Failed" />
                                                        <Setter Property="ToolTip" Value="{Binding ErrorMessage}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <!--  Buttons  -->
                    <DataGridTemplateColumn MinWidth="100">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate DataType="{x:Type components:DownloadViewModel}">
                                <StackPanel
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                                    <!--  Show file  -->
                                    <Button
                                        Padding="4,0,4,0"
                                        VerticalAlignment="Center"
                                        s:View.ActionTarget="{Binding}"
                                        Command="{s:Action ShowFile}"
                                        Style="{DynamicResource MaterialDesignFlatButton}"
                                        ToolTip="Show file"
                                        Visibility="{Binding CanShowFile, Converter={x:Static converters:BoolToVisibilityConverter.VisibleOrCollapsed}}">
                                        <materialDesign:PackIcon
                                            Width="24"
                                            Height="24"
                                            Kind="FileFindOutline" />
                                    </Button>

                                    <!--  Open file  -->
                                    <Button
                                        Padding="4,0,4,0"
                                        VerticalAlignment="Center"
                                        s:View.ActionTarget="{Binding}"
                                        Command="{s:Action OpenFile}"
                                        Style="{DynamicResource MaterialDesignFlatButton}"
                                        ToolTip="Play"
                                        Visibility="{Binding CanOpenFile, Converter={x:Static converters:BoolToVisibilityConverter.VisibleOrCollapsed}}">
                                        <materialDesign:PackIcon
                                            Width="24"
                                            Height="24"
                                            Kind="PlayCircleOutline" />
                                    </Button>

                                    <!--  Cancel download  -->
                                    <Button
                                        Padding="4,0,4,0"
                                        VerticalAlignment="Center"
                                        s:View.ActionTarget="{Binding}"
                                        Command="{s:Action Cancel}"
                                        Style="{DynamicResource MaterialDesignFlatButton}"
                                        ToolTip="Cancel download"
                                        Visibility="{Binding CanCancel, Converter={x:Static converters:BoolToVisibilityConverter.VisibleOrCollapsed}}">
                                        <materialDesign:PackIcon
                                            Width="24"
                                            Height="24"
                                            Kind="CloseCircleOutline" />
                                    </Button>

                                    <!--  Restart download  -->
                                    <Button
                                        Padding="4,0,4,0"
                                        VerticalAlignment="Center"
                                        Command="{s:Action RestartDownload}"
                                        CommandParameter="{Binding}"
                                        Style="{DynamicResource MaterialDesignFlatButton}"
                                        ToolTip="Restart download"
                                        Visibility="{Binding IsCanceledOrFailed, Converter={x:Static converters:BoolToVisibilityConverter.VisibleOrCollapsed}}">
                                        <materialDesign:PackIcon
                                            Width="24"
                                            Height="24"
                                            Kind="Restart" />
                                    </Button>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>